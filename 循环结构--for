一，for语句	
1，重复输出
//控制台输出十次hello world
public class Circulate {
	public static void main(String[] args) {
	    for (int x = 1; x <= 10; x++) {
	      System.out.println("hello world");
	    }
	}
}
  
2，循环结果前后数字的相加相乘等运算
//求5的阶乘
public class Circulate {
	public static void main(String[] args) {
	    int mul = 1;
	    for (int x =2; x <= 5; x++) {
	    	mul*=x;
	    }
	    System.out.println("5的阶乘：" + mul);//5的阶乘：120
	}
}
  
//求1-10之间数据之和
/*(需要两个变量，一个表示所以数据的和（要先初始化），一个表示每次加的数放在循环中)**/
public class Circulate {
	public static void main(String[] args) {
	    int sum =0;
	    for (int x = 0; x <= 10; x++) {
	      sum+=x;
	    }
	    System.out.println("1-10之间数据之和为："+sum);// 1-10之间数据之和为：55
	}
}
   
//求1-10的偶数和
/*此处使用循环下加判断的手法，还可以直接在循环中改成x+=2不判断**/
public class Circulate {
	public static void main(String[] args) {
	    int sum = 0;
	    for (int x = 0; x <= 10; x++) {
	      if (x % 2 == 0) {
	        sum += x;
	      }
	    }
	    System.out.println("1-10之间偶数和为：" + sum);//1-10之间数据之和为：30
	}
}
  
3，水仙花即周边（数的拆分，满足条件的统计思想）
//输出所有水仙花数（一种各位数字的立方之和=本身的三位数）
/*重点关注数的各位分离手法**/
public class Circulate {
	public static void main(String[] args) {
	    System.out.print("水仙花数为：" );
	    for (int x =100; x <1000; x++) {
	      int ge=x%10;
	      int shi=x/10%10;
	      int bai=x/10/10%10;
	      if (x==ge*ge*ge+shi*shi*shi+bai*bai*bai){
	        System.out.print(x+" ");//水仙花数为：153 370 371 407
	      }
	    }
	}
}
  
//统计有多少个水仙花数
public class Circulate {
	public static void main(String[] args) {
	    int count=0;
	    for (int x =100; x <1000; x++) {
	    	int ge=x%10;
	    	int shi=x/10%10;
	    	int bai=x/10/10%10;
	    	if (x==ge*ge*ge+shi*shi*shi+bai*bai*bai){
	     		count++;
	    	}
	    }
	   System.out.print("水仙花的个数为："+count+"个");//水仙花的个数为：4个
	}
}
  
//统计：1-1000之间的数，满足除3余2，除5余3，除7余2的条件有几个？
/*满足多个条件如何书写**/
public class Circulate {
	public static void main(String[] args) {
	    int count =0;
	    for (int x=1;x<=1000;x++){
	      if(x%3==2 && x%5==3 && x%7==2){ //⚠️多个条件并列书写
	        count++;
	      }
	    }
	    System.out.println("满足条件的数据有："+count+"个");//满足条件的数据有：10个
	}
}
	
二，while 语句
1.重复输出
//重复输出10次hello world
public class Circulate {
    public static void main(String[] args) {
       int x=0;
       while(x<10){
           System.out.println("hello world");
           x++;
       }
    }
}

2.累加
//输出1-100所有数字的和
public class Circulate {
    public static void main(String[] args) {
       int x=0;
       int sum=0;
       while(x<=100){
           sum+=x;
           x++;
       }
       System.out.println(sum);//5050
    }
}

3.水仙花
//输出所有水仙花数
public class Circulate {
    public static void main(String[] args) {
       int x=100;
       int sum=0;
       while(x<1000){
           int ge=x%10;
           int shi=x/10%10;
           int bai=x/10/10%10;
           if (x==ge*ge*ge+shi*shi*shi+bai*bai*bai){
               System.out.println(x);
           }
           x++;
       }
    }
}



//统计所有水仙花数
public class Circulate {
    public static void main(String[] args) {
       int x=100;
       int sum=0;
       int count =0;
       while(x<1000){
           int ge=x%10;
           int shi=x/10%10;
           int bai=x/10/10%10;
           if (x==ge*ge*ge+shi*shi*shi+bai*bai*bai){
              count++;
           }
           x++;
       }
        System.out.println(count);//4
    }
}

 三，do...while循环
 /*
 初始化语句
 do{
    循环体语句
    控制条件语句
 }while（判断条件语句）
 **/
 
 1.重复输出
 //输出十次hello world
public class Circulate {
    public static void main(String[] args) {
       int x=0;
        do{
            System.out.println("hello world");
            x++;
       }while(x<10);
    }
}

2.求和思想
//求和1-100
public class Circulate {
    public static void main(String[] args) {
       int x=0;
       int sum=0;
        do{
            sum+=x;
            x++;
       }while(x<=100);
        System.out.println(sum);//5050
    }
}

🌟for 与while的区别
1）对于控制循环的变量，for循环结束后不能再访问（从内存中消失），而while循环结束后仍能访问。
2）优先考虑for，while，do...while
一些实例关于for和while的取舍
/*一个范围用for循环非常明确；不明确要做多少次，while循环较为合适**/    
//一张纸的初始厚度为0.01m,问要折多少次才能不低于珠穆朗玛峰的高度8848m?
public class Circulate {
    public static void main(String[] args) {
       double x=0.01;
       int count=0;
       while(x<8848){
           count++;
           x*=2;
       }
        System.out.println(count);//20
    }
}

3）do...while至少执行一次循环体；而for或while先判断条件是否成立，才执行
4）死循环：注意控制条件语句的那个变量
最简单的死循环格式：while(true){}  和  for(;;){}

 
